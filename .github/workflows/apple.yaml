name: apple

on:
  push:
    branches: ["master"]
    paths-ignore:
      - "**.md"
      - "LICENSE"
  pull_request:
    branches: ["master"]
    paths-ignore:
      - "**.md"
      - "LICENSE"

env:
  DEVELOPER_DIR: /Applications/Xcode_15.2.app/Contents/Developer
  IOS_DEPLOYMENT_TARGET: "12.0"
  MAC_DEPLOYMENT_TARGET: "10.15"
  ENABLE_BITCODE: OFF
  ENABLE_ARC: OFF
  ENABLE_VISIBILITY: OFF
  FFMPEG_ROOT: /tmp/ffmpeg
  SOURCE_DIR: opencv
  OPENCV_SUBDIR: lib/cmake/opencv4

jobs:
  macos:
    name: macos
    strategy:
      matrix:
        osname:
          - { os: macos-13, arch: x64, platform: MAC }
          - { os: macos-14, arch: arm64, platform: MAC_ARM64 }
    runs-on: ${{ matrix.osname.os }}
    env:
      PACKAGE_NAME: libdartcv-macos-${{ matrix.osname.arch }}
    steps:
      - uses: actions/checkout@v4
      - name: build
        run: |
          mkdir -p build && cd build
          cmake -S ${{ github.workspace }} \
            -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/cmake/ios.toolchain.cmake \
            -DPLATFORM=${{ matrix.osname.platform }} \
            -DDEPLOYMENT_TARGET=$MAC_DEPLOYMENT_TARGET \
            -DENABLE_BITCODE=OFF \
            -DENABLE_ARC=$ENABLE_ARC \
            -DENABLE_VISIBILITY=$ENABLE_VISIBILITY \
            -DCMAKE_INSTALL_PREFIX=install \
            -DDARTCV_WITH_VIDEOIO=ON \
            -DDARTCV_WITH_HIGHGUI=ON \
            -DDARTCV_ENABLE_INSTALL=ON \
            -DCMAKE_BUILD_TYPE=Release

          cmake --build . --config Release -j $(nproc) --target install
      - uses: actions/upload-artifact@v4
        name: upload
        with:
          path: build/install
          name: ${{ env.PACKAGE_NAME }}
      - name: package
        run: |
          tar -C build/install -zcf ${{ env.PACKAGE_NAME }}.tar.gz .
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          prerelease: false
          files: |
            ${{ env.PACKAGE_NAME }}.tar.gz
      - name: macos
        run: |
          pod lib lint DartCvMacOS.podspec --allow-warnings
  ios:
    name: ios
    strategy:
      matrix:
        osname:
          - { os: macos-13, arch: x64, platform: MAC }
          - { os: macos-14, arch: arm64, platform: MAC_ARM64 }
    runs-on: ${{ matrix.osname.os }}
    steps:
      - uses: actions/checkout@v4
      - name: ios
        run: |
          pod lib lint DartCvIOS.podspec --allow-warnings
